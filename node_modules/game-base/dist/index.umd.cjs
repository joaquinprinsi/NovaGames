(function(e,t){typeof exports=="object"&&typeof module<"u"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):(e=typeof globalThis<"u"?globalThis:e||self,t(e.GameBase={}))})(this,function(e){"use strict";class t{constructor(){this.phases=Object.freeze({head:new Set,update:new Set,render:new Set,tail:new Set}),this.#e=!1,this.#t=null,this.#s=null,this.#i=["head","update","render","tail"],this.tick=s=>{this.#t=requestAnimationFrame(this.tick);const i=this.#s===null?0:s-this.#s;for(const n of this.#i)for(const r of this.phases[n])try{r(i)}catch(h){console.error(h)}this.phases.head.clear(),this.phases.tail.clear()},this.start=()=>{if(this.running){console.warn("Ticker already running");return}this.#e=!0,this.tick(performance.now())},this.stop=()=>{cancelAnimationFrame(this.#t),this.#t=null,this.#e=!1}}#e;get running(){return this.#e}#t;#s;#i;register(s,i="render"){this.phases[i].add(s)}unregister(s,i="render"){this.phases[i].delete(s)}}e.Ticker=t,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=index.umd.cjs.map
